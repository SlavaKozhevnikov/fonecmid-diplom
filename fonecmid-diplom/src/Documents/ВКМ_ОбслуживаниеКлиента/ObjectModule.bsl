#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий 

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		НовоеУведомление = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		НовоеУведомление.ТекстСообщения = "Создан новый документ";
		НовоеУведомление.Записать();		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.Специалист КАК СпециалистДок,
		|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК ДатаПроведенияРаботДок,
		|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРабот КАК ВремяНачалаРаботДок,
		|	ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРабот КАК ВремяОкончанияРаботДок
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Если Выборка.Следующий() Тогда 
			
			Если Специалист <> Выборка.СпециалистДок Тогда
				НовоеУведомление = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
				НовоеУведомление.ТекстСообщения = СтрШаблон("В документе %1 изменился специалист", Ссылка);
				НовоеУведомление.Записать();
			КонецЕсли;    
			
			Если ДатаПроведенияРабот <> Выборка.ДатаПроведенияРаботДок Тогда
				НовоеУведомление = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
				НовоеУведомление.ТекстСообщения = СтрШаблон("В документе %1 изменилась плановая дата проведения работ", Ссылка);
				НовоеУведомление.Записать();
			КонецЕсли;
			
			Если ВремяНачалаРабот <> Выборка.ВремяНачалаРаботДок Тогда
				НовоеУведомление = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
				НовоеУведомление.ТекстСообщения = СтрШаблон("В документе %1 изменилось плановое время начала работ", Ссылка);
				НовоеУведомление.Записать();
			КонецЕсли;
			
			Если ВремяОкончанияРабот <> Выборка.ВремяОкончанияРаботДок Тогда
				НовоеУведомление = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
				НовоеУведомление.ТекстСообщения = СтрШаблон("В документе %1 изменилось плановое время окончания работ", Ссылка);
				НовоеУведомление.Записать();
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры  

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_ПериодДействияС КАК ДатаНачала,
	|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_ПериодДействияПо КАК ДатаОкончания,
	|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_СуммаАбонентскойПлаты КАК СуммаАбонентскойПлаты,
	|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы,
	|	ВКМ_ОбслуживаниеКлиента.Договор.Представление КАК Договор,
	|	ВКМ_ОбслуживаниеКлиента.Договор.ВидДоговора КАК ВидДоговора,
	|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК ДатаПроведенияРабот
	|ИЗ
	|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	|ГДЕ
	|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
	|	И ВКМ_ОбслуживаниеКлиента.Договор.ВидДоговора = &ВидДоговора";
	
	Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбоненскоеОбслуживание);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		// регистр ВКМ_ВыполненныеКлиентуРаботы 
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Клиент = Клиент;
		Движение.Договор = Договор;
		Движение.КоличествоЧасов = ВыполненныеРаботы.Итог("ЧасыКОплатеКлиенту");
		Движение.СуммаКОплате = Движение.КоличествоЧасов * Выборка.СтоимостьЧасаРаботы;
		
	Иначе 
		
		ОбщегоНазначения.СообщитьПользователю("Выбранный договор не является договором с абонентской платой или срок его действия окончен. Выберите актуальный договор");
		Отказ = Истина;
		Возврат; 
		
	КонецЕсли;
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры


#КонецОбласти

#КонецЕсли
